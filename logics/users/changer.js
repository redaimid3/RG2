const { Keyboard } = require('vk-io')
const keyboards = require('../../another/keyboards')
const util = require('../../another/util')
module.exports = async function(player, context) {
    if(context.messagePayload && !context.isChat) {
        if(context.messagePayload.type == 'private' && context.messagePayload.action == 'changername') {
                    let name = await context.question({
                        message: `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è(–Ω–µ –±–æ–ª–µ–µ 15-–∏ —Å–∏–º–≤–æ–ª–æ–≤\n–°—Ç–æ–∏–º–æ—Å—Ç—å 5 000 RDC.`,
                        reply_to: context.id,
                        keyboard: Keyboard.builder()
                        .textButton({
                            label: `–û—Ç–º–µ–Ω–∞`,
                            color: 'negative',
                            payload: {
                                command: "changeCancel"
                            }
                        })
                    })
                    if(name.text == "–û—Ç–º–µ–Ω–∞") {
                        return context.send({
                            message: `‚úÖ –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`,
                            keyboard: keyboards.main_menu,
                            reply_to: context.id
                        })
                    }
                    if(!name || name.text.length < 1 || name.text.length > 15 || name.text == "@all" || name.text == "@online" || name.text.includes('üçí') || name.text.includes('üëë')) {
                        return context.send({
							message: `‚ùå –ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 1 —Å–∏–º–≤–æ–ª–∞, –∏ –Ω–µ –¥–ª–∏–Ω–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤. –õ–∏–±–æ –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.`,
							keyboard: keyboards.main_menu,
							reply_to: context.id
						})
                    }
                    if(player.playersData[context.senderId].balance < 5000) {
                       return context.send({
							message: `‚ùå –ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`,
							keyboard: keyboards.main_menu,
							reply_to: context.id
						})
                    }
                    if(util.checkLink(name.text) == true) {
                        return context.send({
							message: `‚ùå –ù–∏–∫ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–∫—É.`,
							keyboard: keyboards.main_menu,
							reply_to: context.id
						})
                    }
                    if(player.playersData[context.senderId].balance >= 5000) {
                        player.playersData[context.senderId].balance -= Number(5000)
                        player.playersData[context.senderId].name = name.text
                        return context.send({
                            message: `‚úÖ ${player.playersData[context.senderId].mark}[id${context.senderId}|${player.playersData[context.senderId].name}]${player.playersData[context.senderId].mark}, —ç—Ç–æ –í–∞—à–µ –Ω–æ–≤–æ–µ –∏–º—è. –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ 5000 RDC.`,
                            keyboard: keyboards.main_menu,
                            reply_to: context.id
                        })
                }
        }
    }
}